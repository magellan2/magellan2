name: "Run tests, build artifacts, publish on default branch"

on:
  push:
    branches:
      - "master"

jobs:
  build:
    name: "Test, Build and Create pre-release"
    runs-on: ubuntu-latest
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      INSTALL4J_KEY: ${{ secrets.INSTALL4J_LICENSE_KEY_1 }}
    continue-on-error: false

    steps:
    - name: "Checkout repository"
      uses: actions/checkout@v4
      with:
        fetch-tags: true
        fetch-depth: 0

    - name: "Generate version string"
      id: get-version
      run: |
        VERSION=$(ant -q -S print_version)
        SHORT=$(echo "${VERSION}" | cut -d. -f-2)
        BUILD=$(cat .build.number | grep build.number | cut -f2 -d"=")
        echo "BUILD=${BUILD}" >> $GITHUB_OUTPUT
        echo "SHORT=${SHORT}" >> $GITHUB_OUTPUT
        echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
        echo "TAG=v${VERSION}" >> $GITHUB_OUTPUT

    - name: "Set up JDK 11"
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: 11

    - name: "Sanity check"
      id: sanity_check
      run: |
        # env
        BUILD=${{ steps.get-version.outputs.BUILD }}
        SHORT=${{ steps.get-version.outputs.SHORT }}
        VERSION=${{ steps.get-version.outputs.VERSION }}
        TAG=${{ steps.get-version.outputs.TAG }}

        # version is v1.2.3
        if [[ "${VERSION}" =~ ^[0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*$ ]]; then
          echo "Version $VERSION is okay"
        else
          echo "Version format $VERSION is not okay!"
          exit 1
        fi

        # tag is v1.2.3
        if [[ "${TAG}" =~ ^v[0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*$ ]]; then
          echo "Tag $TAG okay"
        else
          echo "Tag $TAG is not okay for version $VERSION!"
          exit 1
        fi

        # most recent tag has older build number
        LASTTAG=$(git tag -l "v*" --sort='-committerdate' | head -1)
        OLDBUILD=$(git show ${LASTTAG}:.build.number | grep build.number | cut -f2 -d"=")
        if [[ "$OLDBUILD" =~ ^[0-9][0-9]*$ ]]; then
          if (( BUILD == OLDBUILD )); then
            echo "build.number $BUILD has not changed since most recent tag ${LASTTAG}, please update by running ant build locally!"
            exit 1
          fi
        else
          echo "bad tag or build $LASTTAG - $OLDBUILD"
        fi

    - name: "Test with ant"
      run: |
         ant -noinput -buildfile build.xml run_tests
         fails=$(grep -L  "Failures: 0, Errors: 0" test/junit/TEST-*)
         if [ -n "$fails" ]; then
           echo Errors in $fails
           cat $fails
           exit 1
         fi
         skips=$(grep -L  "Skipped: 0" test/junit/TEST-*)
         if [ -n "$skips" ]; then
           echo "Skipped tests: "
           echo $skips
         fi
      # do not exit before all commands are executed
      shell: bash --noprofile --norc -o pipefail {0}

    - name: "Build izpack with ant"
      run: |
        ant -noinput -buildfile build.xml distribute

    - name: "Upload izpack binary artifacts"
      uses: actions/upload-artifact@v4
      with:
        name: binaries.izpack
        path: |
          magellan_v*.jar
          magellan_v*.zip

    - name: "Build install4j with ant"
      run: ant -noinput -buildfile build.xml

    - name: "Upload install4j binary artifacts"
      uses: actions/upload-artifact@v4
      with:
        name: binaries.install4j
        path: |
          Magellan_installer_*.exe
          Magellan_installer_*.sh
          Magellan_installer_*.dmg

    - name: "Read RELEASENOTES and CHANGELOG"
      id: changelog
      run: |
        cat RELEASENOTES.txt | iconv -f ISO-8859-1 > RELEASE.md
        echo '' >> RELEASE.md
        echo '## Excerpt from CHANGELOG' >> RELEASE.md
        echo '' >> RELEASE.md
        head -20 CHANGELOG.txt | iconv -f ISO-8859-1 >> RELEASE.md

    - name: "Publish git tag vX.Y.Z"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        TAG=${{ steps.get-version.outputs.TAG }}
        git config user.name "$GITHUB_ACTOR"
        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
        git remote -v
        gh release delete ${TAG} -y || echo "continuing ..."
        git tag -f "${TAG}"
        REMOTE="https://$GITHUB_ACTOR:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY.git"
        git push --force "$REMOTE" "${TAG}"

    - name: "Create Release"
      uses: softprops/action-gh-release@v2
      with:
        target_commitish: master
        tag_name: ${{ steps.get-version.outputs.TAG }}
        draft: true
        prerelease: false
        name: ${{ steps.get-version.outputs.TAG }}
        body_path: RELEASE.md
        files: |
          LICENSE.txt
          README.md
          RELEASENOTES.txt
          CHANGELOG.txt
          VERSION
          installer/install4j/updates.xml
          magellan_v${{ steps.get-version.outputs.VERSION }}.zip
          Magellan_installer_windows-x64_v${{ steps.get-version.outputs.VERSION }}.exe
          Magellan_installer_unix_v${{ steps.get-version.outputs.VERSION }}.sh
          Magellan_installer_macos_v${{ steps.get-version.outputs.VERSION }}.dmg

    - name: trigger meta action
      run: |
        curl -sS -o meta.log \
          -X POST https://api.github.com/repos/${{ github.repository_owner }}/magellan2.github.io/dispatches \
          -H 'Accept: application/vnd.github+json' \
          -H 'Authorization: token ${{ secrets.META_REPO_ACCESS }}' \
          --data '{
            "event_type": "actions-release-trigger",
            "client_payload": {
              "ref": "${{ github.ref }}",
              "sha": "${{ github.sha }}",
              "caller_repository": "${{ github.repository }}",
              "meta_repository": "${{ github.repository_owner }}/magellan2.github.io",
              "tag": "${{ steps.get-version.outputs.TAG }}",
              "version": "${{ steps.get-version.outputs.VERSION }}",
              "type": "stable" }}'
        if [ -s meta.log ]; then
          cat meta.log
          rm meta.log
          exit -1
        else
          echo "meta action apparently successful"
          rm meta.log
        fi
