<project name="magellan">
  <description>
    This is the ANT compile script for magellan. This script helps you
    to compile a distributable version of magellan.
    
    Please call one of the following public targets:
      - distribute
      - javadoc (not implemented yet)
  </description>

  <property name="VERSION.MAJOR"         value="2"/>
  <property name="VERSION.MINOR"         value="0"/>
  <property name="VERSION.SUB"           value="alpha"/>

  <property name="VERSION"               value="${VERSION.MAJOR}_${VERSION.MINOR}_${VERSION.SUB}"/>
  <property name="VERSION.POINTED"       value="${VERSION.MAJOR}.${VERSION.MINOR}.${VERSION.SUB}"/>
  
  <!-- Some properties -->
  <property name="src.library"       location="${basedir}/src-library"/>
  <property name="src.client"        location="${basedir}/src-client"/>
  <property name="src.plugins"       location="${basedir}/src-plugins"/>
  <property name="src.test"          location="${basedir}/src-test"/>
  <property name="classes"           location="${basedir}/classes"/>
  <property name="help"              location="${basedir}/help"/>
  <property name="etc"               location="${basedir}/etc"/>
  <property name="doc"               location="${basedir}/doc"/>
  <property name="javadoc.api"       location="${basedir}/doc/api"/>
  <property name="lib"               location="${basedir}/lib"/>
  <property name="bin"               location="${basedir}/bin"/>
  <property name="release"           location="${basedir}/release"/>
  
  <!-- Compile Settings -->
  <property name="debug"             value="on" />
  <property name="optimize"          value="off" />
  <property name="build.compiler"    value="javac1.5"/>
  <property name="compile.target"    value="1.5"/>
	<property name="compile.encoding"  value="ISO-8859-1"/>

  <path id="magellan.class.path">
    <pathelement path="${java.class.path}/" />
    <fileset dir="${lib}">
      <include name="**/*.jar" />
    </fileset>
    <pathelement location="${release}/magellan-library.jar" />
    <pathelement location="${release}/magellan-client.jar" />
  </path>

  <!-- *************************************************************** -->
  <!-- *                                                             * -->
  <!-- *  This target compiles and packs the magellan library.       * -->
  <!-- *                                                             * -->
  <!-- *************************************************************** -->
  <target name="build_library">
    <echo message="Compiling Library..." />

    <antcall target="clear-classes"/>
    <mkdir dir="${classes}" />
  	
    <javac srcdir="${src.library}/magellan"
           destdir="${classes}"
           includes="**"
           source="${compile.target}"
           target="${compile.target}"
           encoding="${compile.encoding}"
           optimize="${optimize}"
           fork="true"
           memoryInitialSize="128m"
           memoryMaximumSize="256m"
           debug="${debug}">
      <!--<compilerarg value="-Xlint:unchecked"/>-->
      <!--<compilerarg value="-Xlint:deprecation"/>-->
      <classpath refid="magellan.class.path"/>
    </javac>
  	
    <echo message="Building Magellan Library JAR file" />
  	
    <!-- delete old library -->
    <delete file="${release}/magellan-library.jar" failonerror="false" />
    
    <!-- JAR File erzeugen -->
    <jar jarfile="${release}/magellan-library.jar" basedir="${classes}">
      <manifest>
        <attribute name="Built-By" value="${user.name}" />
        <attribute name="Specification-Title" value="Magellan Library [build ${build.number}]" />
        <attribute name="Specification-Vendor" value="Magellan Development Team"/>
      </manifest>
    </jar>
  	
    <antcall target="clear-classes"/>
  </target>

  <!-- *************************************************************** -->
  <!-- *                                                             * -->
  <!-- *  This target compiles and packs the magellan client.        * -->
  <!-- *                                                             * -->
  <!-- *************************************************************** -->
  <target name="build_client">
    <echo message="Compiling Client..." />

    <antcall target="clear-classes"/>
    <mkdir dir="${classes}" />
  	
    <javac srcdir="${src.client}/magellan"
           destdir="${classes}"
           includes="**"
           source="${compile.target}"
           target="${compile.target}"
           encoding="${compile.encoding}"
           optimize="${optimize}"
           fork="true"
           memoryInitialSize="128m"
           memoryMaximumSize="256m"
           debug="${debug}">
      <!--<compilerarg value="-Xlint:unchecked"/>-->
      <!--<compilerarg value="-Xlint:deprecation"/>-->
      <classpath refid="magellan.class.path"/>
    </javac>
    
    <echo message="Building Magellan Client JAR file" />
  	
    <!-- delete old library -->
    <delete file="${release}/magellan-client.jar" failonerror="false" />
    
    <copy file="${etc}/manifest.mf.template" tofile="${etc}/manifest.mf" overwrite="yes">
      <filterset>
        <filter token="VERSION" value="${VERSION.POINTED}"/>
        <filter token="BUILD" value="${build.number}"/>
        <filter token="USER" value="${user.name}"/>
      </filterset>
    </copy>
    
    <!-- JAR File erzeugen -->
    <jar jarfile="${release}/magellan-client.jar" basedir="${classes}" manifest="${etc}/manifest.mf"/>
  	
    <delete file="${etc}/manifest.mf" failonerror="false" />
    
    <antcall target="clear-classes"/>
  </target>
  
  <!-- *************************************************************** -->
  <!-- *                                                             * -->
  <!-- *  This target compiles and packs the magellan plugin.        * -->
  <!-- *                                                             * -->
  <!-- *************************************************************** -->
  <target name="build_plugins">
    <echo message="Compiling PlugIns..." />

    <antcall target="clear-classes"/>
    <mkdir dir="${classes}" />
  	
    <javac srcdir="${src.plugins}/magellan"
           destdir="${classes}"
           includes="**"
           source="${compile.target}"
           target="${compile.target}"
           encoding="${compile.encoding}"
           optimize="${optimize}"
           fork="true"
           memoryInitialSize="128m"
           memoryMaximumSize="256m"
           debug="${debug}">
      <!--<compilerarg value="-Xlint:unchecked"/>-->
      <!--<compilerarg value="-Xlint:deprecation"/>-->
      <classpath refid="magellan.class.path"/>
    </javac>
  	
    <echo message="Building Magellan PlugIns JAR file" />
  	
    <!-- delete old library -->
    <delete file="${release}/magellan-plugins.jar" failonerror="false" />
    
    <!-- JAR File erzeugen -->
    <jar jarfile="${release}/magellan-plugins.jar" basedir="${classes}">
      <manifest>
        <attribute name="Built-By" value="${user.name}" />
        <attribute name="Specification-Title" value="Magellan PlugIns [build ${build.number}]" />
        <attribute name="Specification-Vendor" value="Magellan Development Team"/>
      </manifest>
    </jar>
  	
    <antcall target="clear-classes"/>
  </target>

  <!-- *************************************************************** -->
  <!-- *                                                             * -->
  <!-- *  This target compiles and packs the magellan help files.    * -->
  <!-- *                                                             * -->
  <!-- *************************************************************** -->
  <target name="build_help">
    <echo message="Building Magellan Help JAR file" />
  	
    <!-- delete old library -->
    <delete file="${release}/magellan-help.jar" failonerror="false" />
    
    <!-- JAR File erzeugen -->
    <jar jarfile="${release}/magellan-help.jar" manifest="${help}/META-INF/MANIFEST.MF">
      <fileset dir="${help}"/>
    </jar>
  </target>
  
  <!-- *************************************************************** -->
  <!-- *                                                             * -->
  <!-- *                                                             * -->
  <!-- *                                                             * -->
  <!-- *************************************************************** -->
  <target name="copy_release_data">
    <echo message="Copying application data to ${release}..." />
    
    <mkdir dir="${release}/lib" />
    <copy todir="${release}/lib" overwrite="true">
      <fileset dir="${lib}">
        <include name="**"/>
        <exclude name="forms-1.0.4.jar"/>
        <exclude name="jflap4_0b7.jar"/>
      </fileset>
    </copy>
    
    <mkdir dir="${release}/doc" />
    <copy todir="${release}/doc" overwrite="true">
      <fileset dir="${doc}">
        <include name="**"/>
      </fileset>
    </copy>
    
    <mkdir dir="${release}/etc" />
    <copy todir="${release}/etc" overwrite="true">
      <fileset dir="${etc}">
        <include name="*.properties"/>
        <include name="*.ini"/>
      </fileset>
    </copy>
    <copy file="${etc}/VERSION.template" tofile="${release}/etc/VERSION" overwrite="yes">
      <filterset>
        <filter token="VERSION" value="${VERSION.POINTED} (build ${build.number})"/>
      </filterset>
    </copy>
    
    <mkdir dir="${release}/etc/images" />
    <copy todir="${release}/etc/images" overwrite="true">
      <fileset dir="${etc}/images">
        <include name="**" />
      </fileset>
    </copy>
    
    <mkdir dir="${release}/etc/rules" />
    <copy todir="${release}/etc/rules" overwrite="true">
      <fileset dir="${etc}/rules">
        <include name="**" />
      </fileset>
    </copy>
    
    <copy todir="${release}/" overwrite="true">
      <fileset dir="${basedir}">
        <include name="CHANGELOG"/>
        <include name="COPYING"/>
        <include name="LICENSE"/>
      </fileset>
    </copy>
  </target>
  <!-- *************************************************************** -->
  <!-- *                                                             * -->
  <!-- *  This target compiles and packs the whole magellan app.     * -->
  <!-- *                                                             * -->
  <!-- *************************************************************** -->
  <target name="distribute" description=" This target compiles and packs the whole magellan application.">
    <buildnumber file=".build.number"/>
    
    <antcall target="clear-classes"/>
    <antcall target="clear-release"/>
    <mkdir dir="${classes}" />
    
    <antcall target="build_library">
      <param name="build.number" value="${build.number}"/>
    </antcall>
    
    <antcall target="build_client">
      <param name="build.number" value="${build.number}"/>
    </antcall>
    
    <antcall target="build_plugins">
      <param name="build.number" value="${build.number}"/>
    </antcall>
    
    <antcall target="build_help">
      <param name="build.number" value="${build.number}"/>
    </antcall>
    
    <antcall target="copy_release_data">
      <param name="build.number" value="${build.number}"/>
    </antcall>
  	
  	<copy file="${release}/etc/VERSION" tofile="${basedir}/VERSION" overwrite="yes"/>
    
    <echo message="Creating ZIP Distribution"/>
    <delete file="${basedir}/magellan_v${VERSION.POINTED}.zip" failonerror="false"/>
    <zip destfile="${basedir}/magellan_v${VERSION.POINTED}.zip">
      <fileset dir="${release}" includes="**"/>
    </zip>
    
    <echo message="Creating Tar.BZ2 Distribution"/>
    <delete file="${basedir}/magellan_v${VERSION.POINTED}.tar.bz2" failonerror="false"/>
    <tar destfile="${basedir}/magellan_v${VERSION.POINTED}.tar.bz2" compression="bzip2">
      <tarfileset dir="${release}">
        <include name="**"/>
      </tarfileset>
    </tar>
    
    <echo message="Creating Tar.GZ Distribution"/>
    <delete file="${basedir}/magellan_v${VERSION.POINTED}.tar.gz" failonerror="false"/>
    <tar destfile="${basedir}/magellan_v${VERSION.POINTED}.tar.gz" compression="gzip">
      <tarfileset dir="${release}">
        <include name="**"/>
      </tarfileset>
    </tar>
    
    <antcall target="clear-release"/>
  </target>
  
  <!-- *************************************************************** -->
  <!-- *                                                             * -->
  <!-- *************************************************************** -->
  <target name="doc" description="==> Creates the JavaDocs">
    <echo message="Running JavaDoc" />
    <javadoc packagenames="magellan.*" destdir="${javadoc.api}" author="true" version="true" use="true" private="false" windowtitle="Magellan ${VERSION.POINTED}" doctitle="Magellan ${VERSION.POINTED}" maxmemory="256M" encoding="UTF-8" locale="de_DE">
      <classpath refid="magellan.class.path" />
      <link href="http://java.sun.com/j2se/1.5.0/docs/api/" />
      <fileset dir="${basedir}">
        <include name="**/*.java"/>
        <exclude name="magellan/test/**"/>
        <exclude name="magellan/client/**"/>
      </fileset>
    </javadoc>
  </target>
  
  <!-- *************************************************************** -->
  <!-- *                                                             * -->
  <!-- *************************************************************** -->
  <target name="clear-classes">
  	<!-- cleaning classes directory by creating&deleting and creating it -->
    <echo message="Cleaning output folder"/>
    <mkdir dir="${classes}" />
    <delete includeEmptyDirs="true" failonerror="false">
      <fileset dir="${classes}" includes="**" />
    </delete>
  </target>
  
  <!-- *************************************************************** -->
  <!-- *                                                             * -->
  <!-- *************************************************************** -->
  <target name="clear-release">
  	<!-- cleaning release directory by creating&deleting and creating it -->
    <echo message="Cleaning release folder"/>
    <mkdir dir="${release}" />
    <delete includeEmptyDirs="true" failonerror="false">
      <fileset dir="${release}" includes="**"/>
    </delete>
    <mkdir dir="${release}" />
  </target>
</project>