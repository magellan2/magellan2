#Generated by ResourceBundle Editor (http://eclipse-rbe.sourceforge.net)

button.execute = Ausführen

extended_commands.help.dialog.container = <html>\r\n <head>\r\n  <style type='text/css'>\r\n    <!--\r\n     body      { font-family: Arial, Helvetica, sans-serif; font-size: 12pt; background-color: #ffffff; color: #000000;}\r\n     td        { font-family: Arial, Helvetica, sans-serif; font-size: 12pt; background-color: #ffffff; color: #000000;}\r\n    -->\r\n  </style>\r\n </head>\r\n <body>\r\n  <p>\r\n  <b>Dies ist der Editorbereich der Extended Commands.</b>\r\n  </p>\r\n   <p>\r\n   Dieser Text soll etwas dabei helfen, die komplexen Möglichkeiten dieses Plugins zu verstehen. Dieser Editor basiert auf BeanShell und ist damit Java ähnlich. Es gibt Klassen und Methoden. Die Variablen sind typsicher. \r\n  </p>\r\n <p>\r\n  Momentan ist eine sogenannte Container ausgewählt. Dies kann eine  eine Partei, ein Gebäude, ein Schiff oder  eine Region sein. Hier stehen folgende globale Variablen \r\n  zur Verfügung:\r\n  </p>\r\n  <ul>\r\n   <li><code>container</code> - der gerade ausgewählte Container (Region, etc.)</li>\r\n   <li><code>world</code> - der gerade geladene Report und alle dazugehörigenInformationen (Inseln, Regionen, Parteien, etc.)</li>\r\n   <li><code>helper</code> - eine Hilfsklasse mit nützlichen Funktionen</li>\r\n  </ul>\r\n<p>\r\nUm weitere Klassen aus dem Java bzw. Magellan Raum nutzen zu können, müssen diese importiert werden. Dies geschieht z.B. wie folgt:\r\n</p>\r\n<pre>\r\nimport magellan.library.*;\r\n\r\n// wenn gerade eine Region ausgewählt\r\n// ist, dann ist container eine \r\n// Region\r\nRegion region = (Region)container;\r\n</pre>\r\n<p>\r\nDie API für die einzelnen Klassen ist sehr umfangreich. Prinzipiell kann man auf alle Teile von Magellan und dem gerade geladenen Report zugreifen. Theoretisch ist es sogar möglich, eigene Fenster zu öffnen, darauf wird diese Dokumentation aber nicht weiter eingehen. Für tiefere Einblicke in die API empfehlen wir folgende Seiten:\r\n <ul>\r\n  <li>Magellan2 API<br/>\r\n     <a href="http://magellan.log-out.net/javadoc/overview-frame.html">http://magellan.log-out.net/javadoc</a><br/>\r\n    Dokumentation aller Klassen und Möglichkeiten im Magellan Client. Speziell interessant sind die Klassen in magellan.library.\r\n   </li>\r\n  <li>Java 5 API<br/>\r\n     <a href="http://java.sun.com/j2se/1.5.0/docs/api/overview-frame.html">http://java.sun.com/j2se/1.5.0/docs/api</a><br/>\r\n     Eine Dokumentation der aktuell verwendeten Java Umgebung. All diese Klassen stehen zur Verfügung.\r\n   </li>\r\n </ul>\r\n</p>\r\n<p>\r\nWir erweitern diese Dokumentation demnächst....\r\n</p>\r\n </body>\r\n</html>
extended_commands.help.dialog.library   = <html>\r\n <head>\r\n  <style type='text/css'>\r\n    <!--\r\n     body      { font-family: Arial, Helvetica, sans-serif; font-size: 12pt; background-color: #ffffff; color: #000000;}\r\n     td        { font-family: Arial, Helvetica, sans-serif; font-size: 12pt; background-color: #ffffff; color: #000000;}\r\n    -->\r\n  </style>\r\n </head>\r\n <body>\r\n  <p>\r\n  <b>Dies ist der Editorbereich der Extended Commands.</b>\r\n  </p>\r\n  <p>\r\n   Dieser Text soll etwas dabei helfen, die komplexen Möglichkeiten dieses Plugins zu verstehen. Dieser Editor basiert auf BeanShell und ist damit Java ähnlich. Es gibt Klassen und Methoden. Die Variablen sind typsicher. \r\n  </p>\r\n  <p>\r\n  Momentan bearbeiten Sie die Bibliothek für alle Einheiten und Container. Hier stehen folgende globale Variablen zur Verfügung:\r\n  </p>\r\n  <ul>\r\n   <li><code>world</code> - der gerade geladene Report und alle dazugehörigen Informationen  (Inseln, Regionen, Parteien, etc.)</li>\r\n   <li><code>helper</code> - eine Hilfsklasse mit nützlichen Funktionen</li>\r\n  </ul>\r\n<p>\r\nUm weitere Klassen aus dem Java bzw. Magellan Raum nutzen zu können, müssen diese importiert werden. Dies geschieht z.B. wie folgt:\r\n</p>\r\n<pre>\r\nimport magellan.library.*;\r\n\r\nint getHorses(Region region) {\r\n  return region.getHorses();\r\n}\r\n</pre>\r\n<p>\r\nDie API für die einzelnen Klassen ist sehr umfangreich. Prinzipiell kann man auf alle Teile von Magellan und dem gerade geladenen Report zugreifen. Theoretisch ist es sogar möglich, eigene Fenster zu öffnen, darauf wird diese Dokumentation aber nicht weiter eingehen. Für tiefere Einblicke in die API empfehlen wir folgende Seiten:\r\n <ul>\r\n  <li>Magellan2 API<br/>\r\n     <a href="http://magellan.log-out.net/javadoc/overview-frame.html">http://magellan.log-out.net/javadoc</a><br/>\r\n    Dokumentation aller Klassen und Möglichkeiten im Magellan Client. Speziell interessant sind die Klassen in magellan.library.\r\n   </li>\r\n  <li>Java 5 API<br/>\r\n     <a href="http://java.sun.com/j2se/1.5.0/docs/api/overview-frame.html">http://java.sun.com/j2se/1.5.0/docs/api</a><br/>\r\n     Eine Dokumentation der aktuell verwendeten Java Umgebung. All diese Klassen stehen zur Verfügung.\r\n   </li>\r\n  <li>BeanShell Syntax<br/>\r\n    <a href="http://www.beanshell.org/manual/contents.html">http://www.beanshell.org/manual/contents.html</a><br/>\r\n    Eine komplette Dokumentation der Möglichkeiten von BeanShell.\r\n </ul>\r\n</p>\r\n<p>\r\nWir erweitern diese Dokumentation demnächst....\r\n</p>\r\n </body>\r\n</html>
extended_commands.help.dialog.unit      = <html>\r\n <head>\r\n  <style type='text/css'>\r\n    <!--\r\n     body      { font-family: Arial, Helvetica, sans-serif; font-size: 12pt; background-color: #ffffff; color: #000000;}\r\n     td        { font-family: Arial, Helvetica, sans-serif; font-size: 12pt; background-color: #ffffff; color: #000000;}\r\n    -->\r\n  </style>\r\n </head>\r\n <body>\r\n  <p>\r\n  <b>Dies ist der Editorbereich der Extended Commands.</b>\r\n  </p>\r\n  <p>\r\n   Dieser Text soll etwas dabei helfen, die komplexen Möglichkeiten dieses Plugins zu verstehen. Dieser Editor basiert auf BeanShell und ist damit Java ähnlich. Es gibt Klassen und Methoden. Die Variablen sind typsicher. \r\n  </p>\r\n  <p>\r\n  Momentan ist eine einzelne Einheit ausgewählt. Hier stehen folgende globale Variablen zur Verfügung:\r\n  </p>\r\n  <ul>\r\n   <li><code>unit</code> - die gerade ausgewählte Einheit</li>\r\n   <li><code>world</code> - der gerade geladene Report und alle dazugehörigen Informationen  (Inseln, Regionen, Parteien, etc.)</li>\r\n   <li><code>helper</code> - eine Hilfsklasse mit nützlichen Funktionen</li>\r\n  </ul>\r\n<p>\r\nUm weitere Klassen aus dem Java bzw. Magellan Raum nutzen zu können, müssen diese importiert werden. Dies geschieht z.B. wie folgt:\r\n</p>\r\n<pre>\r\nimport magellan.library.*;\r\n\r\nRegion region = unit.getRegion();\r\n</pre>\r\n<p>\r\nDie API für die einzelnen Klassen ist sehr umfangreich. Prinzipiell kann man auf alle Teile von Magellan und dem gerade geladenen Report zugreifen. Theoretisch ist es sogar möglich, eigene Fenster zu öffnen, darauf wird diese Dokumentation aber nicht weiter eingehen. Für tiefere Einblicke in die API empfehlen wir folgende Seiten:\r\n <ul>\r\n  <li>Magellan2 API<br/>\r\n     <a href="http://magellan.log-out.net/javadoc/overview-frame.html">http://magellan.log-out.net/javadoc</a><br/>\r\n    Dokumentation aller Klassen und Möglichkeiten im Magellan Client. Speziell interessant sind die Klassen in magellan.library.\r\n   </li>\r\n  <li>Java 5 API<br/>\r\n     <a href="http://java.sun.com/j2se/1.5.0/docs/api/overview-frame.html">http://java.sun.com/j2se/1.5.0/docs/api</a><br/>\r\n     Eine Dokumentation der aktuell verwendeten Java Umgebung. All diese Klassen stehen zur Verfügung.\r\n   </li>\r\n  <li>BeanShell Syntax<br/>\r\n    <a href="http://www.beanshell.org/manual/contents.html">http://www.beanshell.org/manual/contents.html</a><br/>\r\n    Eine komplette Dokumentation der Möglichkeiten von BeanShell.\r\n </ul>\r\n</p>\r\n<p>\r\nWir erweitern diese Dokumentation demnächst....\r\n</p>\r\n </body>\r\n</html>

mainmenu.configure.title = Einstellungen...
mainmenu.execute.title   = Alle Ausführen
mainmenu.library.title   = Bibliothek bearbeiten
mainmenu.title           = Erweiterte Befehle

popupmenu.edit.title    = Bearbeite {0} ({1})
popupmenu.execute.title = Führe Befehle für  {0} ({1}) aus
popupmenu.title         = Erweiterte Befehle
