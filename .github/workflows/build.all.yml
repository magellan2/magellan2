name: Test, build, create artifacts
# Test, build, and upload everything

on:
  workflow_dispatch

jobs:
  build-ubuntu:
    name: Build on ubuntu
    runs-on: ubuntu-latest
    continue-on-error: true

    steps:
    - uses: actions/checkout@v1

    - name: Generate version string
      id: get-version
      run: |
        VERSION=$(ant -q -S print_version)
        SHORT=$(echo "${VERSION}" | cut -d. -f-2)
        BUILD=$(cat .build.number | grep build.number | cut -f2 -d"=")
        echo "::set-env name=BUILD::$BUILD"
        echo "::set-env name=SHORT::$SHORT"
        echo "::set-env name=VERSION::$VERSION"
        echo "::set-env name=TAG::$(echo "v${SHORT}-latest")"

    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Test with ant
      run: |
         ant -noinput -buildfile build.xml run_tests
         fails=$(grep -L  "Failures: 0, Errors: 0" test/junit/TEST-*)
         if [ -n "$fails" ]; then
           echo Errors in $fails
           cat $fails
           exit 1
         fi
      # do not exit before all commands are executed
      shell: bash --noprofile --norc -o pipefail {0}

    - name: Sanity check
      run: |
        # tag is v1.2-latest
        if [[ "${TAG}" =~ ^v[0-9][0-9]*[.][0-9][0-9]*-latest$ ]]; then
          echo tag $TAG okay
        else
          echo "tag (${VERSION}, ${SHORT}) $TAG not okay!"
          exit 1
        fi

        # version is 1.2[.3]-567.latest,alpha, or beta
        if [[ "${VERSION}" =~ ^[0-9][0-9]*[.][0-9][0-9]*([.][0-9][0-9]*)?-[0-9][0-9]*[.](latest|alpha|beta|rc)$ ]]; then
          echo version $VERSION okay
        else
          echo "version $VERSION not okay!"
          exit 1
        fi

        # most recent tag has older build number
        LASTTAG=$(git tag -l v* --sort='-committerdate' | head -1)
        OLDBUILD=$(git show ${LASTTAG}:.build.number | grep build.number | cut -f2 -d"=")
        if [[ "$OLDBUILD" =~ ^[0-9][0-9]*$ ]]; then
          if (( BUILD == OLDBUILD )); then
            echo "build.number $BUILD has not changed since most recent tag ${LASTTAG}
            # this script does not create a release, so this is fine
            # exit 1
          fi
        else
          echo "bad tag or build $LASTTAG - $OLDBUILD"
        fi

        # last -latest tag has older build number
        OLDBUILD=$(git show ${TAG}:.build.number | grep build.number | cut -f2 -d"=")
        if [[ "$OLDBUILD" =~ ^[0-9][0-9]*$ ]]; then
          if (( BUILD <= OLDBUILD )); then
            echo "build.number $BUILD has not changed for tag ${TAG}
            # this script does not create a release, so this is fine
            # exit 1
          fi
        else
          echo "Warning, previous build not found for ${TAG}!"
        fi

    - name: Build with ant
      run: ant -noinput -buildfile build.xml

    - name: Read RELEASENOTES and CHANGELOG
      id: changelog
      run: |
        value=$(cat doc/NIGHTLY.txt | iconv -f ISO-8859-1; echo -e '\n\n'; echo -e '\n## Excerpt from CHANGELOG.txt\n\n'; head -20 CHANGELOG.txt | iconv -f ISO-8859-1; echo -e '\n...\n' )
        value="${value//'%'/'%25'}"
        value="${value//$'\n'/'%0A'}"
        value="${value//$'\r'/'%0D'}"
        echo "::set-env name=BODY::$value"


    - name: prepare meta
      run: |
        set -x
        if [[ "${{ env.TAG }}" =~ .*-([0-9]*[.])?\([a-zA-Z][a-zA-Z]*\).* ]]; then
          TYPE=$(echo ${{ env.TAG }} | sed -e "s/.*-\([0-9]*[.]\)\([a-zA-Z][a-zA-Z]*\).*/\2/")
        else
          TYPE=stable
        fi
        if [[ ! "$TYPE" =~ ^[a-zA-Z]+$ ]]; then
        echo "invalid type $TYPE"
          exit 1
        fi
        echo "::set-env name=TYPE::$TYPE"

    - name: Upload binaries artifact
      uses: actions/upload-artifact@v2
      with:
        name: binaries.ubuntu
        path: |
          magellan_v*.jar
          magellan_v*.zip

    - name: Upload test artifact
      uses: actions/upload-artifact@v2
      with:
        name: test.ubuntu
        path: test/junit

  build-win:
    name: Build on Windows
    runs-on: windows-latest
    continue-on-error: true

    steps:
    - uses: actions/checkout@v1

    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Build with ant
      continue-on-error: true
      run: ant -noinput -buildfile build.xml

    - name: Upload binaries artifact
      uses: actions/upload-artifact@v2
      with:
        name: binaries.windows
        path: |
          magellan_v*.jar
          magellan_v*.zip
      continue-on-error: true

    - name: Upload test artifact
      uses: actions/upload-artifact@v2
      with:
        name: test.windows
        path: test/junit

  build-macos:
    name: Build on MacOS
    runs-on: macos-latest
    continue-on-error: true

    steps:
    - uses: actions/checkout@v1

    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Build with ant
      continue-on-error: true
      run: ant -noinput -buildfile build.xml

    - name: Upload binaries artifact
      uses: actions/upload-artifact@v2
      with:
        name: binaries.mac
        path: |
          magellan_v*.jar
          magellan_v*.zip
      continue-on-error: true

    - name: Upload test artifact
      uses: actions/upload-artifact@v2
      with:
        name: test.mac
        path: test/junit
