<project name="magellan" default="distribute">
	<description>
    This is the ANT compile script for magellan. This script helps you
    to compile a distributable version of magellan.
    
    Please call one of the following public targets:
      - distribute
      - javadoc (not implemented yet)
  </description>

	<property name="VERSION.MAJOR"         value="2"/>
	<property name="VERSION.MINOR"         value="0"/>
	<property name="VERSION.SUB"           value="6"/>

	<property name="VERSION"               value="${VERSION.MAJOR}_${VERSION.MINOR}_${VERSION.SUB}"/>
	<property name="VERSION.POINTED"       value="${VERSION.MAJOR}.${VERSION.MINOR}.${VERSION.SUB}"/>

	<!-- Some properties -->
	<property name="src.library"       location="${basedir}/src-library"/>
	<property name="src.client"        location="${basedir}/src-client"/>
	<property name="src.plugins"       location="${basedir}/src-plugins"/>
	<property name="src.test"          location="${basedir}/src-test"/>
	<property name="classes"           location="${basedir}/classes"/>
	<property name="help"              location="${basedir}/help"/>
	<property name="etc"               location="${basedir}/etc"/>
	<property name="doc"               location="${basedir}/doc"/>
	<property name="javadoc.api"       location="${basedir}/doc/api"/>
	<property name="lib"               location="${basedir}/lib"/>
	<property name="lib_internal"      location="${basedir}/lib/internal"/>
	<property name="bin"               location="${basedir}/bin"/>
	<property name="release"           location="${basedir}/release"/>
	<property name="sandbox"           location="${basedir}/sandbox"/>
	<property name="installer"         location="${basedir}/installer"/>
	<property name="macos"             location="${basedir}/macos"/>


	<property name="junit.output.dir" value="${basedir}/test/junit"/>

	<!-- Compile Settings -->
	<property name="debug"             value="on" />
	<property name="optimize"          value="off" />
	<property name="build.compiler"    value="javac1.5"/>
	<property name="compile.target"    value="1.5"/>
	<property name="compile.encoding"  value="ISO-8859-1"/>

	<path id="magellan.class.path">
		<pathelement path="${java.class.path}/" />
		<fileset dir="${lib}">
			<include name="**/*.jar" />
			<exclude name="internal/*" />
			<exclude name="javadocking.jar" />
		</fileset>
		<pathelement location="${release}/magellan-library.jar" />
		<pathelement location="${release}/magellan-client.jar" />
	</path>

	<path id="magellan.class.path.test">
		<pathelement path="${java.class.path}/" />
		<fileset dir="${lib}">
			<include name="**/*.jar" />
			<exclude name="internal/*" />
			<exclude name="javadocking.jar" />
		</fileset>
		<pathelement location="${lib_internal}/junit-4.10.jar" />
		<pathelement location="${classes}" />
	</path>

	<!-- *************************************************************** -->
	<!-- *                                                             * -->
	<!-- *  This target compiles and packs the magellan library.       * -->
	<!-- *                                                             * -->
	<!-- *************************************************************** -->
	<target name="build_library">
		<echo message="Compiling Library..." />

		<!--        <antcall target="clear-classes"/> -->
		<mkdir dir="${classes}" />

		<javac srcdir="${src.library}/"
           destdir="${classes}"
           includes="**"
           source="${compile.target}"
           target="${compile.target}"
           encoding="${compile.encoding}"
           optimize="${optimize}"
           fork="true"
		   includeantruntime="false"
		   memoryInitialSize="128m"
           memoryMaximumSize="256m"
           debug="${debug}">
			<!--<compilerarg value="-Xlint:unchecked"/>-->
			<!--<compilerarg value="-Xlint:deprecation"/>-->
			<classpath refid="magellan.class.path"/>
		</javac>
	</target>

	<target name="build_library_jar" >
		<!--
		<antcall target="build_library">
			<param name="build.number" value="${build.number}" />
		</antcall>
-->
		<echo message="Building Magellan Library JAR file" />

		<!-- delete old library -->
		<delete file="${release}/magellan-library.jar" failonerror="false" />

		<!-- JAR File erzeugen -->
		<jar jarfile="${release}/magellan-library.jar" basedir="${classes}" includes="magellan/library/**">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Specification-Title" value="Magellan Library [build ${build.number}]" />
				<attribute name="Specification-Vendor" value="Magellan Development Team"/>
			</manifest>
		</jar>

	</target>

	<!-- *************************************************************** -->
	<!-- *                                                             * -->
	<!-- *  This target compiles and packs the magellan client.        * -->
	<!-- *                                                             * -->
	<!-- *************************************************************** -->
	<target name="build_client">
		<echo message="Compiling Client..." />

		<!--        <antcall target="clear-classes"/> -->
		<mkdir dir="${classes}" />

		<javac srcdir="${src.client}/magellan"
           destdir="${classes}"
           includes="**"
           source="${compile.target}"
           target="${compile.target}"
           encoding="${compile.encoding}"
           optimize="${optimize}"
           fork="true"
           includeantruntime="false"
           memoryInitialSize="128m"
           memoryMaximumSize="256m"
           debug="${debug}">
			<!--<compilerarg value="-Xlint:unchecked"/>-->
			<!--<compilerarg value="-Xlint:deprecation"/>-->
			<classpath refid="magellan.class.path"/>
		</javac>
	</target>

	<target name="build_client_jar">
		<!--
		<antcall target="build_client">
			<param name="build.number" value="${build.number}" />
		</antcall>

		<echo message="Building Magellan Client JAR file" />
-->
		<!-- delete old library -->
		<delete file="${release}/magellan-client.jar" failonerror="false" />

		<copy file="${etc}/manifest.mf.template" tofile="${etc}/manifest.mf" overwrite="yes">
			<filterset>
				<filter token="VERSION" value="${VERSION.POINTED}"/>
				<filter token="BUILD" value="${build.number}"/>
				<filter token="USER" value="${user.name}"/>
			</filterset>
		</copy>

		<!-- JAR File erzeugen -->
		<jar jarfile="${release}/magellan-client.jar" basedir="${classes}" includes="magellan/client/**" manifest="${etc}/manifest.mf"/>

		<delete file="${etc}/manifest.mf" failonerror="false" />

	</target>

	<!-- *************************************************************** -->
	<!-- *                                                             * -->
	<!-- *  This target compiles and packs the magellan plugin.        * -->
	<!-- *                                                             * -->
	<!-- *************************************************************** -->
	<target name="build_plugins">
		<echo message="Compiling PlugIns..." />

		<!--		<antcall target="clear-classes"/> -->
		<mkdir dir="${classes}" />

		<javac srcdir="${src.plugins}/magellan"
           destdir="${classes}"
           includes="**"
           source="${compile.target}"
           target="${compile.target}"
           encoding="${compile.encoding}"
           optimize="${optimize}"
           fork="true"
           includeantruntime="false"
           memoryInitialSize="128m"
           memoryMaximumSize="256m"
           debug="${debug}">
			<!--<compilerarg value="-Xlint:unchecked"/>-->
			<!--<compilerarg value="-Xlint:deprecation"/>-->
			<classpath refid="magellan.class.path"/>
		</javac>
	</target>

	<target name="build_plugins_jar">
		<!--
		<antcall target="build_plugins">
			<param name="build.number" value="${build.number}" />
		</antcall>
-->
		<echo message="Building Magellan PlugIns JAR file" />

		<!-- delete old library -->
		<delete file="${release}/magellan-plugins.jar" failonerror="false" />

		<!-- JAR File erzeugen -->
		<jar jarfile="${release}/magellan-plugins.jar" basedir="${classes}" includes="magellan/plugin/**">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Specification-Title" value="Magellan PlugIns [build ${build.number}]" />
				<attribute name="Specification-Vendor" value="Magellan Development Team"/>
			</manifest>
		</jar>

	</target>

	<!-- *************************************************************** -->
	<!-- *                                                             * -->
	<!-- *  This target compiles and packs the magellan help files.    * -->
	<!-- *                                                             * -->
	<!-- *************************************************************** -->
	<target name="build_help">
		<echo message="Building Magellan Help JAR file" />

		<!-- delete old library -->
		<delete file="${release}/magellan-help.jar" failonerror="false" />

		<!-- JAR File erzeugen -->
		<jar jarfile="${release}/magellan-help.jar" manifest="${help}/META-INF/MANIFEST.MF">
			<fileset dir="${help}"/>
		</jar>
	</target>

	<!-- *************************************************************** -->
	<!-- *                                                             * -->
	<!-- *  This target compiles and packs the magellan library.       * -->
	<!-- *                                                             * -->
	<!-- *************************************************************** -->
	<target name="build_test">
		<echo message="Compiling tests..." />

		<!--        <antcall target="clear-classes"/> -->
		<mkdir dir="${classes}" />

		<javac srcdir="${src.test}/"
	           destdir="${classes}"
	           includes="**"
	           source="${compile.target}"
	           target="${compile.target}"
	           encoding="${compile.encoding}"
	           optimize="${optimize}"
	           fork="true"
	           includeantruntime="false"
	           memoryInitialSize="128m"
	           memoryMaximumSize="256m"
	           debug="${debug}">
			<!--<compilerarg value="-Xlint:unchecked"/>-->
			<!--<compilerarg value="-Xlint:deprecation"/>-->
			<classpath refid="magellan.class.path.test"/>
		</javac>

	</target>

	<!-- *************************************************************** -->
	<!-- *                                                             * -->
	<!-- *                                                             * -->
	<!-- *                                                             * -->
	<!-- *************************************************************** -->
	<target name="copy_release_data">
		<echo message="Copying application data to ${release}..." />

		<mkdir dir="${release}/lib" />
		<copy todir="${release}/lib" overwrite="true">
			<fileset dir="${lib}">
				<include name="**"/>
				<exclude name="internal/*" />
				<exclude name="javadocking.jar"/>
			</fileset>
		</copy>

		<mkdir dir="${release}/doc" />
		<copy todir="${release}/doc" overwrite="true">
			<fileset dir="${doc}">
				<include name="**"/>
			</fileset>
		</copy>

		<mkdir dir="${release}/etc" />
		<copy todir="${release}/etc" overwrite="true">
			<fileset dir="${etc}">
				<include name="*.properties"/>
				<include name="*.ini"/>
			</fileset>
		</copy>
		<copy file="${etc}/VERSION.template" tofile="${release}/etc/VERSION" overwrite="yes">
			<filterset>
				<filter token="VERSION" value="${VERSION.POINTED} (build ${build.number})"/>
			</filterset>
		</copy>

		<mkdir dir="${release}/etc/images" />
		<copy todir="${release}/etc/images" overwrite="true">
			<fileset dir="${etc}/images">
				<include name="**" />
			</fileset>
		</copy>

		<mkdir dir="${release}/etc/rules" />
		<copy todir="${release}/etc/rules" overwrite="true">
			<fileset dir="${etc}/rules">
				<include name="**" />
			</fileset>
		</copy>

		<mkdir dir="${release}/etc/plugins" />
		<copy todir="${release}/etc/plugins" overwrite="true">
			<fileset dir="${etc}/plugins">
				<include name="**" />
			</fileset>
		</copy>

		<mkdir dir="${release}/plugins" />
		<echo file="${release}/plugins/README.txt" append="false">
    	This folder contains external plugins. Do not delete...Thanks.
  	    </echo>

		<copy todir="${release}/" overwrite="true">
			<fileset dir="${basedir}">
				<include name="CHANGELOG.txt"/>
				<include name="COPYING.txt"/>
				<include name="LICENSE.txt"/>
				<include name="README.txt"/>
				<include name="RELEASENOTES.txt"/>
			</fileset>
			<fileset dir="${installer}">
				<include name="*.bat"/>
				<include name="*.sh"/>
			</fileset>
		</copy>
	</target>

	<!-- *************************************************************** -->
	<!-- *                                                             * -->
	<!-- *  This target runs all the unit tests                        * -->
	<!-- *                                                             * -->
	<!-- *************************************************************** -->
	<target name="run_tests" description="This target runs the unit tests.">

		<antcall target="build_library" />
		<antcall target="build_client" />
		<antcall target="build_plugins" />

		<antcall target="build_test" />
		<mkdir dir="${junit.output.dir}" />

		<echo message="Running all unit tests" />

		<junit fork="yes" failureProperty="test.failure" includeantruntime="false" printsummary="withOutAndErr">
			<test name="magellan.test.AFirstTest" todir="${junit.output.dir}" />
			<classpath refid="magellan.class.path.test" />
		</junit>
		<junit fork="yes" failureProperty="test.failure" includeantruntime="false" printsummary="withOutAndErr">
			<batchtest todir="${junit.output.dir}">
                <!-- E3CommandParser is not part of the release -->				   
				<fileset dir="${src.test}" includes="**/*Test.java" excludes="**/E3CommandParserTest.java" />
			</batchtest>

			<formatter type="brief" usefile="true" />
			<classpath refid="magellan.class.path.test" />
		</junit>

		<delete includeEmptyDirs="true" failonerror="false">
			<fileset dir="${basedir}">
				<filename name="default????*/**" />
			</fileset>
		</delete>
		<!--        <antcall target="clear-classes"/> -->

		<fail message="test failed" if="test.failure" />
	</target>

	<!-- *************************************************************** -->
	<!-- *                                                             * -->
	<!-- *  This target compiles and packs the whole magellan app.     * -->
	<!-- *                                                             * -->
	<!-- *************************************************************** -->
	<target name="test_and_distribute" description=" This target compiles, tests and packs the whole magellan application.">
		<buildnumber file=".build.number"/>

		<antcall target="clear-all"/>

		<antcall target="run_tests" />

		<antcall target="build_library_jar">
			<param name="build.number" value="${build.number}"/>
		</antcall>

		<antcall target="build_client_jar">
			<param name="build.number" value="${build.number}"/>
		</antcall>

		<antcall target="build_plugins_jar">
			<param name="build.number" value="${build.number}"/>
		</antcall>

		<antcall target="build_help">
			<param name="build.number" value="${build.number}"/>
		</antcall>

		<antcall target="copy_release_data">
			<param name="build.number" value="${build.number}"/>
		</antcall>

		<copy file="${release}/etc/VERSION" tofile="${basedir}/VERSION" overwrite="yes"/>

		<copy file="${installer}/izpack-install.template.xml" tofile="${installer}/izpack-install.xml" encoding="${compile.encoding}" overwrite="yes">
			<filterset>
				<filter token="VERSION" value="${VERSION.POINTED}"/>
				<filter token="BUILD" value="${build.number}"/>
				<filter token="USER" value="${user.name}"/>
			</filterset>
		</copy>

		<java jar="${installer}/izpack/standalone-compiler.jar" fork="true" failonerror="true">
			<arg value="${installer}/izpack-install.xml"/>
			<arg value="-b"/>
			<arg value="."/>
			<arg value="-o"/>
			<arg value="magellan_v${VERSION.POINTED}.jar"/>
			<arg value="-k"/>
			<arg value="standard"/>

			<classpath>
				<pathelement path="${java.class.path}/" />
				<fileset dir="${installer}/izpack/">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</java>

		<echo message="Creating ZIP Distribution"/>
		<delete file="${basedir}/magellan_v${VERSION.POINTED}.zip" failonerror="false"/>
		<zip destfile="${basedir}/magellan_v${VERSION.POINTED}.zip">
			<fileset dir="${release}" includes="**"/>
		</zip>

		<echo message="Creating MacOS Distribution"/>
		<delete file="${basedir}/magellan_v${VERSION.POINTED}_macos.zip" failonerror="false"/>

		<mkdir dir="${macos}/Magellan.app" />
		<mkdir dir="${macos}/Magellan.app" />
		<mkdir dir="${macos}/Magellan.app/Contents" />
		<copy file="${installer}/macos/PkgInfo" todir="${macos}/Magellan.app/Contents/" overwrite="yes"/>
		<copy file="${installer}/macos/Info.plist" todir="${macos}/Magellan.app/Contents/" overwrite="yes"/>
		<mkdir dir="${macos}/Magellan.app/Contents/MacOS" />
		<copy file="${installer}/macos/JavaApplicationStub" todir="${macos}/Magellan.app/Contents/MacOS/" overwrite="yes"/>
		<chmod dir="${macos}/Magellan.app/Contents/MacOS" perm="ugo+rx" includes="**"/>
		<mkdir dir="${macos}/Magellan.app/Contents/Resources" />
		<copy file="${installer}/macos/icon/Magellan.icns" todir="${macos}/Magellan.app/Contents/Resources/" overwrite="yes"/>
		<mkdir dir="${macos}/Magellan.app/Contents/Resources/Java" />
		<copy todir="${macos}/Magellan.app/Contents/Resources/Java/" overwrite="true">
			<fileset dir="${release}/" includes="**"/>
		</copy>

		<antcall target="clear-all"/>
	</target>

	<!-- *************************************************************** -->
	<!-- *                                                             * -->
	<!-- *  This target compiles and packs the whole magellan app.     * -->
	<!-- *                                                             * -->
	<!-- *************************************************************** -->
	<target name="distribute" description=" This target compiles and packs the whole magellan application.">
		<buildnumber file=".build.number"/>

		<antcall target="clear-all"/>

		<antcall target="build_library" />

		<antcall target="build_library_jar">
			<param name="build.number" value="${build.number}"/>
		</antcall>

		<antcall target="build_client" />

		<antcall target="build_client_jar">
			<param name="build.number" value="${build.number}"/>
		</antcall>

		<antcall target="build_plugins" />

		<antcall target="build_plugins_jar">
			<param name="build.number" value="${build.number}"/>
		</antcall>

		<antcall target="build_help">
			<param name="build.number" value="${build.number}"/>
		</antcall>

		<antcall target="copy_release_data">
			<param name="build.number" value="${build.number}"/>
		</antcall>

		<copy file="${release}/etc/VERSION" tofile="${basedir}/VERSION" overwrite="yes"/>

		<copy file="${installer}/izpack-install.template.xml" tofile="${installer}/izpack-install.xml" encoding="${compile.encoding}" overwrite="yes">
			<filterset>
				<filter token="VERSION" value="${VERSION.POINTED}"/>
				<filter token="BUILD" value="${build.number}"/>
				<filter token="USER" value="${user.name}"/>
			</filterset>
		</copy>

		<java jar="${installer}/izpack/standalone-compiler.jar" fork="true" failonerror="true">
			<arg value="${installer}/izpack-install.xml"/>
			<arg value="-b"/>
			<arg value="."/>
			<arg value="-o"/>
			<arg value="magellan_v${VERSION.POINTED}.jar"/>
			<arg value="-k"/>
			<arg value="standard"/>

			<classpath>
				<pathelement path="${java.class.path}/" />
				<fileset dir="${installer}/izpack/">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</java>

		<echo message="Creating ZIP Distribution"/>
		<delete file="${basedir}/magellan_v${VERSION.POINTED}.zip" failonerror="false"/>
		<zip destfile="${basedir}/magellan_v${VERSION.POINTED}.zip">
			<fileset dir="${release}" includes="**"/>
		</zip>

		<echo message="Creating MacOS Distribution"/>
		<delete file="${basedir}/magellan_v${VERSION.POINTED}_macos.zip" failonerror="false"/>

		<mkdir dir="${macos}/Magellan.app" />
		<mkdir dir="${macos}/Magellan.app" />
		<mkdir dir="${macos}/Magellan.app/Contents" />
		<copy file="${installer}/macos/PkgInfo" todir="${macos}/Magellan.app/Contents/" overwrite="yes"/>
		<copy file="${installer}/macos/Info.plist" todir="${macos}/Magellan.app/Contents/" overwrite="yes"/>
		<mkdir dir="${macos}/Magellan.app/Contents/MacOS" />
		<copy file="${installer}/macos/JavaApplicationStub" todir="${macos}/Magellan.app/Contents/MacOS/" overwrite="yes"/>
		<chmod dir="${macos}/Magellan.app/Contents/MacOS" perm="ugo+rx" includes="**"/>
		<mkdir dir="${macos}/Magellan.app/Contents/Resources" />
		<copy file="${installer}/macos/icon/Magellan.icns" todir="${macos}/Magellan.app/Contents/Resources/" overwrite="yes"/>
		<mkdir dir="${macos}/Magellan.app/Contents/Resources/Java" />
		<copy todir="${macos}/Magellan.app/Contents/Resources/Java/" overwrite="true">
			<fileset dir="${release}/" includes="**"/>
		</copy>

		<antcall target="clear-all" />

	</target>

	<!-- *************************************************************** -->
	<!-- *                                                             * -->
	<!-- *  This target compiles and packs the whole magellan app.     * -->
	<!-- *                                                             * -->
	<!-- *************************************************************** -->
	<target name="distributeNoPack" description=" This target compiles and packs the whole magellan application.">
		<buildnumber file=".build.number" />

		<antcall target="clear-all"/>

		<antcall target="build_library">
			<param name="build.number" value="${build.number}"/>
		</antcall>

		<antcall target="build_client">
			<param name="build.number" value="${build.number}"/>
		</antcall>

		<antcall target="build_plugins">
			<param name="build.number" value="${build.number}"/>
		</antcall>

		<antcall target="build_help">
			<param name="build.number" value="${build.number}"/>
		</antcall>

		<antcall target="copy_release_data">
			<param name="build.number" value="${build.number}"/>
		</antcall>

		<copy file="${release}/etc/VERSION" tofile="${basedir}/VERSION" overwrite="yes"/>

		<copy file="${installer}/izpack-install.template.xml" tofile="${installer}/izpack-install.xml" encoding="${compile.encoding}" overwrite="yes">
			<filterset>
				<filter token="VERSION" value="${VERSION.POINTED}"/>
				<filter token="BUILD" value="${build.number}"/>
				<filter token="USER" value="${user.name}"/>
			</filterset>
		</copy>

		<java jar="${installer}/izpack/standalone-compiler.jar" fork="true" failonerror="true">
			<arg value="${installer}/izpack-install.xml"/>
			<arg value="-b"/>
			<arg value="."/>
			<arg value="-o"/>
			<arg value="magellan_v${VERSION.POINTED}.jar"/>
			<arg value="-k"/>
			<arg value="standard"/>

			<classpath>
				<pathelement path="${java.class.path}/" />
				<fileset dir="${installer}/izpack/">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</java>

	</target>


	<!-- *************************************************************** -->
	<!-- *    CREATE JAVADOC                                           * -->
	<!-- *************************************************************** -->
	<target name="doc" description="==> Creates the JavaDocs">
		<echo message="Running JavaDoc" />
		<javadoc encoding="${compile.encoding}" packagenames="magellan.*" destdir="${javadoc.api}" author="true" version="true" use="true" private="false" windowtitle="Magellan ${VERSION.POINTED}" doctitle="Magellan ${VERSION.POINTED}" maxmemory="256M" locale="de_DE">
			<classpath refid="magellan.class.path" />
			<link href="http://docs.oracle.com/javase/6/docs/api/" />
			<fileset dir="${basedir}">
				<include name="**/*.java"/>
				<!-- src-test causes javadoc to crash. Could have something to do with this: http://forums.sun.com/thread.jspa?threadID=5333060&tstart=0
             if you need javadoc for src-test, please investigate! -->
				<exclude name="src-test/**"/>
				<exclude name="src-internal/**"/>
				<!-- does this do anything at all? -->
				<exclude name="magellan/test/**"/>
				<exclude name="magellan/client/**"/>
			</fileset>
		</javadoc>
	</target>

	<!-- *************************************************************** -->
	<!-- *    CLEAR CLASSES                                            * -->
	<!-- *************************************************************** -->
	<target name="clear-directory" >
		<!-- cleaning classes directory by creating&deleting and creating it -->
		<echo message="Cleaning ${dir} folder"/>
		<mkdir dir="${dir}" />
		<delete includeEmptyDirs="true" failonerror="false">
			<fileset dir="${dir}" includes="**" />
		</delete>
		<mkdir dir="${dir}" />
	</target>

	<!-- *************************************************************** -->
	<!-- *     CLEAR ALL                                               * -->
	<!-- *************************************************************** -->
	<target name="clear-all">
		<antcall target="clear-directory">
			<param name="dir" value="${classes}"/>
		</antcall>
		<antcall target="clear-directory">
			<param name="dir" value="${release}"/>
		</antcall>
		<antcall target="clear-directory">
			<param name="dir" value="${macos}"/>
		</antcall>

		<echo message="Cleaning default"/>
		<delete includeEmptyDirs="true" failonerror="false">
			<fileset dir="${basedir}" includes="default-??????*/**"/>
			<fileset dir="${basedir}" includes="default??????*/**"/>
		</delete>
	</target>

</project>